#! /usr/bin/env bash


###################################################################
# Script to show progress of pulling sims
# Extracts time from md.log of d?.??? directories
###################################################################

printhelp () {
echo -e "Usage: progress [OPTIONS]
Options:
\t-d \"d?.???\"\tsims are in directories d?.???
\t-e 20000\tend time for simulations is 20000 ps, default is 10000 ps
\t-ti\t\tthermodynamic integration, directories are Lambda_*
\t-nc\t\tno color
\t-nf\t\tdon't print out completed sims
\t-of\t\tprint out only completed sims
\t-f\t\tfile option
\t-n\t\tnames
\t-nl\t\tnameslist
\t-h\t\tprints help"
}


# total time for simulation
end=200000
closetoend=180000
#directories="d?.???/?-PULL*"
dirset=false
noFinished=false
onlyFinished=false
noColor=false
multipledir=true
printonlydir=false
printonlydirlist=false

if [[ $(ls -dv Lambda_*/ 2>/dev/null) ]]
then
    directories="Lambda_*/*TI"
elif [[ $(ls -dv d?.*/*US 2>/dev/null) ]]
then
    directories="d?.*/*US"
elif [[ $(ls -dv pull*/*US 2>/dev/null) ]]
then
    directories="pull*/*US"
elif [[ $(ls -dv L-State-*/*TI 2>/dev/null) ]]
then
    directories="L-State-*/*TI"
fi

# options
while [[ $# -ge 1 ]]; do
    case $1 in

	-d | -dirs)
	    directories=$(ls -dv $2)
	    dirset=true
	    shift 2;;

	-nf | -notfinished)
	    option=$1
	    noFinished=true
	    shift;;

	-of | -onlyfinished)
	    option=$1
	    onlyFinished=true
	    shift;;

	-nc | -nocolor)
	    option=$1
	    noColor=true
	    shift;;

	-e | -end)
	    end=$2
	    closetoend=$(echo "$end*0.8" | bc)
	    shift 2;;

	-ti)
	    TI=true
	    dirset=true
	    directories=$(ls -dv Lambda*/Production_MD)
	    shift ;;

	-f | -file)
	    multipledir=false
	    if [[ -n "$2" ]]
	    then
		file=$2 
		shift 2
	    else
		file="md.log"
		shift
	    fi
	    ;;

	-n | -name)
	    printonlydir=true
	    shift;;

	-nl | -namelist)
	    printonlydirlist=true
	    shift;;


	-h|-help|--help|--h|*)
	    printhelp
	    exit 0;;
    esac
done

logfiles=$(ls md*.log 2>/dev/null)
logfileslist=(${logfiles// / })
dirs=$(ls -dv d?.??? 2>/dev/null)

NN=1

if [[ $multipledir == true ]]
then
    [[ ${#logfileslist[@]} == 1 ]] && [[ $dirset == false  ]] && \
	[[ ${dirs[@]} == "" ]] && multipledir=false && file=${logfiles[0]}
    if [[ ${#logfileslist[@]} -gt 1 ]] && \
       	[[ $dirset == false ]] && \
	[[ ${dirs[@]} == "" ]]
    then
	multipledir=false
	file=$(ls -l md*.log | tail -n 1 | awk '{print $9}')
    fi
fi

# COLORS
###################################################################
# Reset
Color_Off='\e[0m'       # Text Reset

# Bold
# BBlack='\e[1;30m'       # Black
BRed='\e[1;31m'         # Red
BGreen='\e[1;32m'       # Green
# BYellow='\e[1;33m'      # Yellow
# BBlue='\e[1;34m'        # Blue
BPurple='\e[1;35m'      # Purple
# BCyan='\e[1;36m'        # Cyan
# BWhite='\e[1;37m'       # White


lastoccur () {
    file=$1
    if [[ -f "$file" ]]
    then
	progress=$(tac "$file" 2>/dev/null | grep -v "Time:" \
	    | grep "Time" -m 1 -B 1 | head -n 1 | awk '{print $2}')
	echo -n "$progress"
    fi
}

definecolor () {
    t=$1
    if [[ $t ]] 
    then
	if [[ $(echo "print($end>$t>$closetoend)" | python) == 'True' ]]
       	then
	    color="$BRed"
	elif [[ $(echo "print($end<=$t)" | python) == 'True' ]]
       	then
	    color="$BPurple"
	else
	    color="$BGreen"
	fi
	echo "$color"
    fi
}

printout () {
    file=$1
    t=$2
    color=$3
    print=true
    [[ $file == *part* ]] && tab='\t' || tab='\t\t'
    [[ $noColor == true ]] && color="$Color_Off"
    if [[ "$color" == "$BPurple" ]]
    then
	$noFinished && print=false
    else
	$onlyFinished && print=false
    fi
    $print && echo -ne "$NN- $file :$tab" "$color" "$t" "$Color_Off""\n"
    let NN=$((NN+1))
}

if [[ $multipledir == true ]]
then
    for dir in ${directories[@]}
    do
	pulldir=$(ls -dv "$dir"  2>/dev/null)
	file=$(ls -1 $pulldir/md*.log 2>/dev/null | tail -n 1)
	t=$(lastoccur "$file") color=$(definecolor "$t")
	if $printonlydir
       	then
	    [[ -e "$file" ]] && printout "$dir" "$t" "$color"
	elif $printonlydirlist
       	then
	    if $noFinished
	    then
		[[ "$color" != "$BPurple" ]] && echo "$dir"
	    elif $onlyFinished
	    then
		[[ "$color" == "$BPurple" ]] && echo "$dir"
	    else
		echo "$dir"
	    fi
	else
	    [[ -e "$file" ]] && printout "$file" "$t" "$color"
	fi
    done
else
    t=$(lastoccur "$file") color=$(definecolor "$t")
    printout "$file" "$t" "$color"
fi
