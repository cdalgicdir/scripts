# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

_chomp_path() {
    #local path=${1/${HOME}\// }
    local path=${1/${HOME}/ ~}
    path=${path//${HOME}}
    local last=${path} sedout= count=0 path2=
    #bash is dumb, "${#path//[^'/']/}" fails.
    #sedout="${path//[^'/']/}"
    sedout=(${path//\// })
    count=${#sedout[@]}
    echo ${last}
}

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# Combine multiline commands into one in history
shopt -s cmdhist

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
#HISTSIZE=1000
#HISTFILESIZE=2000

unset HISTSIZE
unset HISTFILESIZE
HISTIGNORE="&:ls:[bf]g:exit:..:l:dow"
HOSTNAME="$(hostname)"
HOSTNAME_SHORT="${HOSTNAME%%.*}"
HISTFILE="${HOME}/.history/$(date +%Y/%m/%d.%H.%M.%S)_${HOSTNAME_SHORT}_$$"
mkdir -p "$(dirname "$HISTFILE")"
histgrep () {
    grep --color=auto -r "$@" $(ls -dv ~/.history)
    history | grep --color=auto "$@"
}


# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    #PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
    PS1='\[\033[01;32m\]# `date +"%Y.%m.%d %R"` $(pwd)\n\$\[\033[00m\] '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

complete -f -X '!*.pdf' mupdf
complete -f -X '!*.@(pdf|djvu|ps)' zathura
complete -f -X '!*.pdf' pdfviewer
complete -f -X '!*.corr' ramaplot
complete -f -X '!*.gp' gp
complete -f -X '!*.gp' gpp
complete -f -X '!*.pdf' cn

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'


###################################################################
PROMPT_DIRTRIM=2
PS1='\[\e[38;5;172m\]# \h\[\e[38;5;245m\]: \[\e[38;5;5m\]`_chomp_path $(pwd)`\n\[\e[38;5;202m\]âŸ«\[\e[00m\] '
###################################################################


# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

if [ -f ~/.bash_soft ]; then
    . ~/.bash_soft
fi

if [ -f ~/.bash_aliases_soft ]; then
    . ~/.bash_aliases_soft
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi
calc(){ echo $@ | julia;}
shopt -s extglob
man () { yelp "man:$@"; }
export SVNROOT=svn+ichiport://cdalgicdir@88.255.97.68/home/svnroot

case "$TERM" in
    xterm*|rxvt*|screen*)
        bind '"\e[A": history-search-backward'
        bind '"\e[B": history-search-forward'
    ;;
esac

# Ctrl-v: (insert mode) switch to command mode and edit in vi
bind '"\C-v": "\ev"'
#function gvim () { (/usr/bin/gvim -f "$@" &) }

#Automatically do an ls after each cd
cd() {
   builtin cd "$@"
   [[ $PWD == "$HOME/Downloads" ]] && ls -tr || ls -v
}

function pawk {
    local first="awk '{ if ( \$1 !~ /^[@|#]/) print "
    local last="}'"
    local cmd="${first}\$${1}${last}"
    eval $cmd
}

function dirawk {
    local cmd="awk '{split(\$1,a,\"/\");print a[1]}'"
    eval $cmd
}

export EDITOR=vim

# alias diff-side-by-side='diff --side-by-side -W"`tput cols`"'
# alias diff-side-by-side-changes='diff --side-by-side --suppress-common-lines -W"`tput cols`"'
#CDPATH=$CDPATH:~/remote
# get airline working 
# export TERM=xterm-256color
#export TERM=screen-256color-bce
#export TERM=screen-256color
#so as not to be disturbed by Ctrl-S ctrl-Q in terminals:
stty -ixon

#export SSH_AUTH_SOCK=$HOME/.gnupg/S.gpg-agent.ssh
export PATH=/usr/local/cuda/bin:$PATH

[ -f ~/.fzf.bash ] && source ~/.fzf.bash
