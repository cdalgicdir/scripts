# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoredups

# append to the history file, don't overwrite it
shopt -s histappend
# Combine multiline commands into one in history
shopt -s cmdhist
# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=200000
HISTFILESIZE=10000
export HISTIGNORE="&:ls:[bf]g:exit"
# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

complete -f -X '!*.pdf' mupdf
complete -f -X '!*.pdf' pdfviewer
complete -f -X '!*.corr' ramaplot
complete -f -X '!*.gp' gp
complete -f -X '!*.gp' gpp

# some more ls aliases
#alias ll='ls -alF'
#alias la='ls -A'
#alias l='ls -CF'

###################################################################
PROMPT_DIRTRIM=2
PS1='\[\e[1;34m\]\w\[\e[m\] \[\e[1;32m\]\$ \[\e[m\]\[\e[1;37m\] '
#PS1='\[\e[1;34m\](${PWD//\// })\[\e[m\] \[\e[1;32m\]\$ \[\e[m\]\[\e[1;37m\] '
#PS1='\[\e[1;34m\]\w\[\e[m\]\n\[\e[1;32m\]\$ \[\e[m\]\[\e[1;37m\] '
#PS1="\e[01;34m# `date +'%Y.%m.%d %R'` \w\[\e[m\]\n\[\e[1;32m\]\$ \[\e[m\]\[\e[1;37m\] "
###################################################################

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
    . ~/.bash_completion.d/books
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

GROMACSDIR=/usr/local/gromacs/gromacs-4.6.7
VOTCADIR=$HOME/votca/votca-1.2.4-g467

CDPATH=".:~/remote"
export PATH=$PATH:$HOME/progs/bin:$HOME/Mendeley/bin
source $GROMACSDIR/bin/GMXRC.bash
export GMXLIB=$GROMACSDIR/share/gromacs/top
source $VOTCADIR/bin/VOTCARC.bash
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib:$VOTCADIR/lib
export MANPATH=/usr/share/man/:/usr/local/gromacs-4.5.6/share/man:/opt/novell/man
#calc(){ echo "scale=2;$@" | bc;}
#calc(){ printf "%.4f\n" `echo $@ |bc -l`;}
calc(){ echo $@ | octave -q;}
shopt -s extglob
#export VIMRUNTIME=/usr/share/vim/vimcurrent
alias emerillon='export CLUTTER_VBLANK=none && emerillon'
man () { yelp "man:$@"; }
export SVNROOT=svn+ssh://cdalgicdir@88.255.97.68/home/svnroot
#export DSSP=$HOME/Documents/scripts/currentscripts/dsspold
#MANPATH=$MANPATH:/usr/local/texlive/2012/texmf/doc/man
#INFOPATH=:$INFOPATH:/usr/local/texlive/2012/texmf/doc/info
#PATH=$PATH:/usr/local/texlive/2012/bin/x86_64-linux
# beginning CUDA variables
#export PATH=$PATH:/usr/local/cuda-5.0/bin
#export LD_LIBRARY_PATH=/usr/local/cuda-5.0/lib64:/lib
# end of CUDA variables
## Up Arrow: search and complete from previous history
bind '"\e[A": history-search-backward'
## Down Arrow: search and complete from next history
bind '"\e[B": history-search-forward'
# Ctrl-v: (insert mode) switch to command mode and edit in vi
bind '"\C-v": "\ev"'
function gvim () { (/usr/bin/gvim -f "$@" &) }
#export PATH=$PATH:/usr/local/namd/namd-2.9-multicore
#export SCHRODINGER=/opt/schrodinger

### FUNCTIONS

#Automatically do an ls after each cd
cd() {
   builtin cd "$@"
   [[ $PWD == "$HOME/Downloads" ]] && ls -tr || ls
}

function pawk {
    local first="awk '{ if ( \$1 !~ /^[@|#]/) print "
    local last="}'"
    local cmd="${first}\$${1}${last}"
    eval $cmd
}
alias alert_helper='history|tail -n1|sed -e "s/^\s*[0-9]\+\s*//" -e "s/;\s*alert$//"'
alias alert='notify-send -i /usr/share/icons/gnome/32x32/apps/gnome-terminal.png "[$?] $(alert_helper)"'
export VIMRUNTIME=/usr/share/vim/vim74
export LC_TIME=en_GB.utf8
export EDITOR=vim
export MMTSBDIR=$HOME/mmtsb
export PATH=$PATH:$MMTSBDIR/perl:$MMTSBDIR/bin
#export PATH=/usr/local/plumed/plumed-2.1/bin:$PATH
#export LD_LIBRARY_PATH=/usr/local/plumed/plumed-2.1/lib:$LD_LIBRARY_PATH

