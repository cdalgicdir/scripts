#! /usr/bin/python

import re, sys

f = open(sys.argv[1],'r')
fout = open(sys.argv[2],'w')

txt = f.read()

bonded_part = ''.join(re.findall(r'<cg_bonded>.*</cg_bonded>',txt,re.DOTALL))
names = re.findall(r'<name>(.*?)</name>',bonded_part)
beads = re.findall(r'</name>.*?</beads>',bonded_part,re.DOTALL)

prev_section = None

comment = "###################################################################"

for val in ['hist','vals','tab']:
    if val == 'hist':
        print >> fout, "%s\n# HISTOGRAMS\n%s" %(comment, comment)
        print >> fout, "# hist set n 101"
        print >> fout, "hist set scale no"
    elif val == 'vals':
        print >> fout, "%s\n# TIMELINE DATA\n%s" %(comment, comment)
    elif val == 'tab':
        print >> fout, "%s\n# TABULATED POTENTIALS\n%s" %(comment, comment)

    for name in names:
        if val == 'hist':
            fname_root = name
        elif val == 'vals':
            fname_root = 'time_' + name
        elif val == 'tab':
            fname_root = 'table_' + name

        # count the number of properties
        X = ''.join(re.findall(r'{0}.*?</name>.*?<beads>(.*?)</beads>'.format(name),bonded_part,re.DOTALL)).split('\n')
        nlines = 0
        for i in X:
            if not i.strip().isspace() and not i == '':
                nlines += 1

        section = name.split('_')[0]
        if section != prev_section:
            print >> fout
            print >> fout, "# %s\n" %section
            prev_section = section
        print >> fout, "# %s" %name
        if val in ['hist','vals']:
            for i in range(1,nlines):
                print >> fout, val, fname_root + "-%d.xvg" %i, "1:" + name + ":%d" %i
            if val == 'hist':
                # write the average
                print >> fout, val, fname_root + "_avg.xvg", "1:" + name + ":*"
                print >> fout
        elif val == 'tab':
            if section in ['bond', 'dist']:
                scale = 'bond'
            elif section in ['ang', 'angle']:
                scale = 'angle'
            else:
                scale = 'no'
            print >> fout, "tab set scale %s" %scale
            print >> fout, val, fname_root + ".xvg", "1:" + name + ":*"

print >> fout, "\nq"
print "Written commands to %s!" %sys.argv[2]
